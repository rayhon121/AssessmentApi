{"version":3,"file":"js/330.48c96eb8.js","mappings":"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","sources":["webpack://assessment_test_app/./src/pages/examwindows-page.vue","webpack://assessment_test_app/./src/pages/examwindows-page.vue?8383"],"sourcesContent":["<template>\r\n  \r\n  <div class=\"standard-form\">\r\n    <va-form ref=\"form\">\r\n      <va-select\r\n        label=\"Exam\"\r\n        v-model=\"selectedExam\"\r\n        :options=\"exams\"\r\n        :rules=\"[value => (!!value) || 'Field is required']\"\r\n      />\r\n      \r\n      <div class=\"d-flex\">\r\n          <va-date-input :rules=\"[(date) => !!date || 'Field Required']\" \r\n              label=\"Start Date\" v-model=\"examStartDate\" />\r\n          <va-divider vertical />\r\n          <va-time-input :rules=\"[(date) => !!date || 'Field Required']\" \r\n              label=\"Start Time\" v-model=\"examStartTime\" ampm />\r\n      </div>\r\n      \r\n      <div class=\"d-flex\">\r\n          <va-date-input :rules=\"[(date) => !!date || 'Field Required']\" \r\n              label=\"End Date\" v-model=\"examEndDate\" />\r\n          <va-divider vertical />\r\n          <va-time-input :rules=\"[(date) => !!date || 'Field Required']\" \r\n              label=\"End Time\" v-model=\"examEndTime\" ampm />\r\n      </div>\r\n\r\n      <va-button\r\n        class=\"mb-3\"\r\n        @click=\"addExamWindow()\"\r\n      >\r\n        Add a exam window\r\n      </va-button>\r\n    </va-form>    \r\n    <h4 class=\"display-4\">Exam Windows</h4>\r\n    <va-data-table :items=\"windows\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { inject } from 'vue'\r\nimport { useStore } from 'vuex';\r\n\r\nexport default {\r\n  setup() {\r\n    const axios = inject('$axios');\r\n    const store = useStore()\r\n    const config = inject('appConfig');\r\n    return {\r\n      axios,\r\n      store,\r\n      config\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      exams: [],\r\n      windows: [],\r\n      selectedExam: null,\r\n      examStartDate: new Date(),\r\n      examEndDate: new Date(),\r\n      examStartTime: new Date(),\r\n      examEndTime: new Date(),\r\n    }\r\n  },\r\n  async created() {\r\n    const examResponse = await this.axios.get(`${this.config.apiUrl}/api/v1/exams`)\r\n        .catch(function (error) {\r\n            console.log(error)\r\n        });\r\n\r\n    this.exams = examResponse.data.map(exam => ({ text: `${exam.name} - ${exam.college.name}`, value: exam }));\r\n    this.reloadData();\r\n  },  \r\n  methods: {\r\n    async addExamWindow() {\r\n      const startDateTime = new Date(this.examStartDate);\r\n      startDateTime.setHours(this.examStartTime.getHours(), this.examStartTime.getMinutes());\r\n\r\n      const endDateTime = new Date(this.examEndDate);\r\n      endDateTime.setHours(this.examEndTime.getHours(), this.examEndTime.getMinutes());\r\n\r\n      let store = this.store;\r\n      let self = this;\r\n      if (!this.$refs.form.validate())\r\n        return;\r\n\r\n      await this.axios.post(`${this.config.apiUrl}/api/v1/exam_windows`, {\r\n            examId: this.selectedExam.value.id,\r\n            startDateTime,\r\n            endDateTime\r\n        })\r\n        .then(function() {              \r\n          store.commit('updateNavBarMessage', { isSuccess: true, message: \"Successfully add the exam window.\", isVisible: true }); \r\n          self.clearFields();\r\n          self.reloadData();\r\n        })     \r\n        .catch(function (error) {             \r\n          store.commit('updateNavBarMessage', { isSuccess: false, message: error, isVisible: true }); \r\n        });\r\n    },\r\n    async reloadData() {\r\n      let self = this;\r\n      await this.axios.get(`${this.config.apiUrl}/api/v1/exam_windows`)\r\n        .then(function(response){\r\n          self.windows = response.data.map(window => ({ \r\n              id: window.id,\r\n              exam: window.exam.name, \r\n              start: new Date(window.start).toLocaleString(),\r\n              end: new Date(window.end).toLocaleString()\r\n            }));\r\n        })\r\n        .catch(function (error) {\r\n            self.store.commit('updateNavBarMessage', { isSuccess: false, message: error, isVisible: true }); \r\n        });\r\n    },\r\n    clearFields() {\r\n      this.$refs.form.reset()\r\n      setTimeout(() => {\r\n        this.$refs.form.resetValidation()\r\n      }, 1); \r\n    }\r\n  },\r\n}\r\n</script>","import { render } from \"./examwindows-page.vue?vue&type=template&id=52f1267a\"\nimport script from \"./examwindows-page.vue?vue&type=script&lang=js\"\nexport * from \"./examwindows-page.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\projects\\\\github\\\\ruby\\\\assessmentApi\\\\spa\\\\assessment_test_app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_va_form","ref","_component_va_select","label","$data","$event","options","rules","value","_component_va_date_input","date","_component_va_divider","vertical","_component_va_time_input","ampm","_component_va_button","onClick","$options","_hoisted_5","_component_va_data_table","items","setup","axios","inject","store","useStore","config","data","exams","windows","selectedExam","examStartDate","Date","examEndDate","examStartTime","examEndTime","async","examResponse","this","get","apiUrl","catch","error","console","log","map","exam","text","name","college","reloadData","methods","startDateTime","setHours","getHours","getMinutes","endDateTime","self","$refs","form","validate","post","examId","id","then","commit","isSuccess","message","isVisible","clearFields","response","window","start","toLocaleString","end","reset","setTimeout","resetValidation","__exports__","render"],"sourceRoot":""}