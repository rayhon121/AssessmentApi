{"version":3,"file":"js/898.7ca7bd7e.js","mappings":"yMACOA,MAAM,iB,WAsBN,gB,GAIHC,EAAAA,EAAAA,GAAgC,MAA5BD,MAAM,aAAY,SAAK,G,iJA1B7BE,EAAAA,EAAAA,IA6BM,MA7BN,EA6BM,EA5BJC,EAAAA,EAAAA,IAwBUC,EAAA,CAxBDC,IAAI,QAAM,C,kBACjB,IAIE,EAJFF,EAAAA,EAAAA,IAIEG,EAAA,CAHAC,MAAM,a,WACGC,EAAAA,U,qCAAAA,EAAAA,UAASC,GACjBC,MAAK,CAAGC,GAAUA,GAASA,EAAMC,OAAM,yBAH1C,gCAKAT,EAAAA,EAAAA,IAKEG,EAAA,CAJAN,MAAM,OACNO,MAAM,Y,WACGC,EAAAA,S,qCAAAA,EAAAA,SAAQC,GAChBC,MAAK,CAAGC,GAAUA,GAASA,EAAMC,OAAM,yBAJ1C,gCAMAT,EAAAA,EAAAA,IAKEG,EAAA,CAJAN,MAAM,OACNO,MAAM,e,WACGC,EAAAA,Y,qCAAAA,EAAAA,YAAWC,GACnBC,MAAK,CAAGC,GAASE,EAAAA,cAAcF,IAAK,yCAJvC,gCAMAR,EAAAA,EAAAA,IAKYW,EAAA,CAJVd,MAAM,OACLe,QAAK,eAAEF,EAAAA,YAFV,C,kBAGC,IAED,M,cAvBF,KAyBAG,GACAb,EAAAA,EAAAA,IACgBc,EAAA,CADAC,MAAOV,EAAAA,OAAK,mB,aAShC,GACEW,QACI,MAAMC,GAAQC,EAAAA,EAAAA,IAAO,UACfC,GAAQC,EAAAA,EAAAA,MACRC,GAASH,EAAAA,EAAAA,IAAO,aACtB,MAAO,CACLD,QACAE,QACAE,SAEL,EACDC,OACE,MAAO,CACLC,UAAW,GACXC,SAAU,GACVC,YAAa,GACbC,MAAO,GAEV,EACDC,gBACEC,KAAKC,YACN,EACDC,QAAS,CACPH,gBACI,IAAIR,EAAQS,KAAKT,MACbY,EAAOH,KAENA,KAAKI,MAAMC,KAAKC,kBAEfN,KAAKX,MAAMkB,KAAM,GAAEP,KAAKP,OAAOe,sBAAuB,CACxDb,UAAWK,KAAKL,UAChBC,SAAUI,KAAKJ,SACfC,YAAaG,KAAKH,cAErBY,MAAK,WACJlB,EAAMmB,OAAO,sBAAuB,CAAEC,WAAW,EAAMC,QAAS,+BAAgCC,WAAW,IAC3GV,EAAKW,cACLX,EAAKF,YACN,IACAc,OAAM,SAAUC,GACfzB,EAAMmB,OAAO,sBAAuB,CAAEC,WAAW,EAAOC,QAASI,EAAOH,WAAW,GACpF,GACJ,EACDI,cAAcrC,GACV,MAAMsC,EAAQ,IAAIC,OAAO,4CACzB,OAAOD,EAAME,KAAKxC,EACrB,EACDmB,mBACE,IAAII,EAAOH,WACLA,KAAKX,MAAMgC,IAAK,GAAErB,KAAKP,OAAOe,uBACjCC,MAAK,SAASa,GACbnB,EAAKL,MAAQwB,EAAS5B,KAAK6B,KAAIC,IAAG,CAC9BC,GAAID,EAAKC,GACTC,KAAO,GAAEF,EAAKG,cAAcH,EAAKI,YACjCC,MAAQ,GAAEL,EAAKM,kBAEpB,IACAf,OAAM,SAAUC,GACbb,EAAKZ,MAAMmB,OAAO,sBAAuB,CAAEC,WAAW,EAAOC,QAASI,EAAOH,WAAW,GAC3F,GACJ,EACDC,cACEd,KAAKI,MAAMC,KAAK0B,QAChBC,YAAW,KACThC,KAAKI,MAAMC,KAAK4B,iBAAhB,GACC,EACL,I,QClGJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://assessment_test_app/./src/pages/users-page.vue","webpack://assessment_test_app/./src/pages/users-page.vue?18fa"],"sourcesContent":["<template>\r\n  <div class=\"standard-form\">\r\n    <va-form ref=\"form\">\r\n      <va-input\r\n        label=\"First Name\"\r\n        v-model=\"firstName\"\r\n        :rules=\"[value => (value && value.length > 0) || 'Field is required']\"\r\n      />\r\n      <va-input\r\n        class=\"mt-3\"\r\n        label=\"Last Name\"\r\n        v-model=\"lastName\"\r\n        :rules=\"[value => (value && value.length > 0) || 'Field is required']\"\r\n      />\r\n      <va-input\r\n        class=\"mt-3\"\r\n        label=\"Phone Number\"\r\n        v-model=\"phoneNumber\"\r\n        :rules=\"[value => isPhoneNumber(value)|| 'Field must be in format ###-###-####']\"\r\n      />\r\n      <va-button\r\n        class=\"mb-3\"\r\n        @click=\"addUser()\"\r\n      >\r\n        Add a user\r\n      </va-button>\r\n    </va-form>\r\n    <h4 class=\"display-4\">Users</h4>\r\n    <va-data-table :items=\"users\">\r\n    </va-data-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { inject } from 'vue'\r\nimport { useStore } from 'vuex';\r\n\r\nexport default {\r\n  setup() {\r\n      const axios = inject('$axios');\r\n      const store = useStore()\r\n      const config = inject('appConfig');\r\n      return {\r\n        axios,\r\n        store,\r\n        config\r\n      }\r\n  },\r\n  data () {\r\n    return {\r\n      firstName: '',\r\n      lastName: '',\r\n      phoneNumber: '',\r\n      users: []\r\n    }\r\n  },\r\n  async created() {\r\n    this.reloadData();\r\n  },\r\n  methods: {\r\n    async addUser() {\r\n        let store = this.store;\r\n        let self = this;\r\n        \r\n        if (!this.$refs.form.validate())\r\n          return;\r\n        await this.axios.post(`${this.config.apiUrl}/api/v1/users`, {\r\n            firstName: this.firstName,\r\n            lastName: this.lastName,\r\n            phoneNumber: this.phoneNumber\r\n        })\r\n        .then(function() {              \r\n          store.commit('updateNavBarMessage', { isSuccess: true, message: \"Successfully added the user.\", isVisible: true }); \r\n          self.clearFields();\r\n          self.reloadData();\r\n        })     \r\n        .catch(function (error) {             \r\n          store.commit('updateNavBarMessage', { isSuccess: false, message: error, isVisible: true }); \r\n        });\r\n    },\r\n    isPhoneNumber(value) {\r\n        const regex = new RegExp('^[0-9]{3}-[0-9]{3}-[0-9]{4}$|^[0-9]{10}$');\r\n        return regex.test(value);\r\n    },\r\n    async reloadData() {\r\n      let self = this;\r\n      await this.axios.get(`${this.config.apiUrl}/api/v1/users`)\r\n        .then(function(response){\r\n          self.users = response.data.map(user => ({ \r\n              id: user.id,\r\n              name: `${user.first_name} ${user.last_name}`, \r\n              phone: `${user.phone_number}`\r\n            }));\r\n        })\r\n        .catch(function (error) {\r\n            self.store.commit('updateNavBarMessage', { isSuccess: false, message: error, isVisible: true }); \r\n        });\r\n    },\r\n    clearFields() {\r\n      this.$refs.form.reset()\r\n      setTimeout(() => {\r\n        this.$refs.form.resetValidation()\r\n      }, 1); \r\n    }\r\n  },\r\n}\r\n</script>","import { render } from \"./users-page.vue?vue&type=template&id=618f7485\"\nimport script from \"./users-page.vue?vue&type=script&lang=js\"\nexport * from \"./users-page.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\projects\\\\github\\\\ruby\\\\assessmentApi\\\\spa\\\\assessment_test_app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_va_form","ref","_component_va_input","label","$data","$event","rules","value","length","$options","_component_va_button","onClick","_hoisted_3","_component_va_data_table","items","setup","axios","inject","store","useStore","config","data","firstName","lastName","phoneNumber","users","async","this","reloadData","methods","self","$refs","form","validate","post","apiUrl","then","commit","isSuccess","message","isVisible","clearFields","catch","error","isPhoneNumber","regex","RegExp","test","get","response","map","user","id","name","first_name","last_name","phone","phone_number","reset","setTimeout","resetValidation","__exports__","render"],"sourceRoot":""}