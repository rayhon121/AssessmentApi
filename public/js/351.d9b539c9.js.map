{"version":3,"file":"js/351.d9b539c9.js","mappings":"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","sources":["webpack://assessment_test_app/./src/pages/registration-page.vue","webpack://assessment_test_app/./src/pages/registration-page.vue?26b1"],"sourcesContent":["<template>\r\n  <div class=\"standard-form\">\r\n    <va-form ref=\"form\">\r\n      <va-input\r\n        label=\"First Name\"\r\n        v-model=\"firstName\"\r\n        :rules=\"[value => (value && value.length > 0) || 'Field is required']\"\r\n      />\r\n      <va-input\r\n        class=\"mt-3\"\r\n        label=\"Last Name\"\r\n        v-model=\"lastName\"\r\n        :rules=\"[value => (value && value.length > 0) || 'Field is required']\"\r\n      />\r\n      <va-input\r\n        class=\"mt-3\"\r\n        label=\"Phone Number\"\r\n        v-model=\"phoneNumber\"\r\n        :rules=\"[value => isPhoneNumber(value)|| 'Field must be in format ###-###-#### or ##########']\"\r\n      />\r\n      <va-input\r\n        class=\"mt-3\"\r\n        label=\"College ID\"\r\n        v-model=\"collegeId\"\r\n        :rules=\"[value => !isNaN(value) && !!value|| 'Field must be a number']\"\r\n      />\r\n      <va-input\r\n        class=\"mt-3\"\r\n        label=\"Exam ID\"\r\n        v-model=\"examId\"\r\n        :rules=\"[value => !isNaN(value) && !!value|| 'Field must be a number']\"\r\n      />\r\n\r\n      <div class=\"d-flex\">\r\n          <va-date-input :rules=\"[(date) => !!date || 'Field Required']\" \r\n              label=\"Start Date\" v-model=\"startDate\" />\r\n          <va-divider vertical />\r\n          <va-time-input :rules=\"[(date) => !!date || 'Field Required']\" \r\n              label=\"Start Time\" v-model=\"startTime\" ampm />\r\n      </div>\r\n      \r\n      <va-button\r\n        class=\"mb-3\"\r\n        @click=\"register()\"\r\n      >\r\n        Register\r\n      </va-button>\r\n    </va-form>\r\n    <h4 class=\"display-4\">Registrations</h4>\r\n    <va-data-table :items=\"registrations\">\r\n      <template #cell(actions)=\"{ value }\"><va-button flat icon=\"delete\" @click=\"deleteItem({value})\"></va-button></template>\r\n    </va-data-table>\r\n  </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport { inject } from 'vue'\r\nimport { useStore } from 'vuex';\r\n\r\nexport default {\r\n  setup() {\r\n    const axios = inject('$axios');\r\n    const store = useStore()\r\n    const config = inject('appConfig');\r\n\r\n    return {\r\n      axios,\r\n      store,\r\n      config\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      firstName: '',\r\n      lastName: '',\r\n      phoneNumber: '',\r\n      collegeId: null,\r\n      examId: null,\r\n      startDate: new Date(),\r\n      startTime: new Date(),\r\n      registrations: []\r\n    }\r\n  },\r\n  async created() {\r\n    this.reloadData();\r\n  },\r\n  methods: {\r\n    async register() {\r\n        \r\n        let startDateTime = new Date(this.startDate);\r\n        startDateTime.setHours(this.startTime.getHours(), this.startTime.getMinutes());\r\n        let store = this.store;\r\n        let self = this;\r\n\r\n        if (!this.$refs.form.validate())\r\n          return;\r\n        return await this.axios.post(`${this.config.apiUrl}/api/v1/registrations`, {\r\n            first_name: this.firstName,\r\n            last_name: this.lastName,\r\n            phone_number: this.phoneNumber,\r\n            college_id: parseInt(this.collegeId),\r\n            exam_id: parseInt(this.examId),\r\n            start_time: startDateTime\r\n            })   \r\n            .then(function() {              \r\n              store.commit('updateNavBarMessage', { isSuccess: true, message: \"Successfully registered the student.\", isVisible: true }); \r\n              self.clearFields();\r\n              self.reloadData();\r\n            })     \r\n            .catch(function (error) {          \r\n              console.log(error);   \r\n              store.commit('updateNavBarMessage', { isSuccess: false, message: error.response.data.error ?? error, isVisible: true }); \r\n            });\r\n            \r\n    },\r\n    async deleteItem(id) {\r\n      let self = this;\r\n      await this.axios.delete(`${this.config.apiUrl}/api/v1/registrations/${id.value}`)   \r\n            .then(function() {              \r\n              self.store.commit('updateNavBarMessage', { isSuccess: true, message: \"Successfully deleted registration.\", isVisible: true }); \r\n              self.clearFields();\r\n              self.reloadData();\r\n            })     \r\n            .catch(function (error) {            \r\n              self.store.commit('updateNavBarMessage', { isSuccess: false, message: error.response.data.error ?? error, isVisible: true }); \r\n            });\r\n    },\r\n    async reloadData() {\r\n      let self = this;\r\n      await this.axios.get(`${this.config.apiUrl}/api/v1/registrations`)\r\n        .then(function(response){\r\n          self.registrations = response.data.map(registration => ({ \r\n              id: registration.id,\r\n              username: `${registration.user.first_name} ${registration.user.last_name}`, \r\n              exam: `${registration.exam.name}`,\r\n              start: new Date(registration.start_time).toLocaleString(),\r\n              actions: registration.id\r\n            }));\r\n        })\r\n        .catch(function (error) {\r\n            self.store.commit('updateNavBarMessage', { isSuccess: false, message: error, isVisible: true }); \r\n        });\r\n    },\r\n    clearFields() {\r\n      this.$refs.form.reset()\r\n      this.startDate = new Date();\r\n      this.startTime = new Date();\r\n      setTimeout(() => {\r\n        this.$refs.form.resetValidation()\r\n      }, 1); \r\n    },\r\n    isPhoneNumber(value) {\r\n        const regex = new RegExp('^[0-9]{3}-[0-9]{3}-[0-9]{4}$|^[0-9]{10}$');\r\n        return regex.test(value);\r\n    }\r\n  },\r\n}\r\n</script>","import { render } from \"./registration-page.vue?vue&type=template&id=583bae0e\"\nimport script from \"./registration-page.vue?vue&type=script&lang=js\"\nexport * from \"./registration-page.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"G:\\\\projects\\\\github\\\\ruby\\\\assessmentApi\\\\spa\\\\assessment_test_app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_va_form","ref","_component_va_input","label","$data","$event","rules","value","length","$options","isNaN","_component_va_date_input","date","_component_va_divider","vertical","_component_va_time_input","ampm","_component_va_button","onClick","_hoisted_4","_component_va_data_table","items","_withCtx","flat","icon","setup","axios","inject","store","useStore","config","data","firstName","lastName","phoneNumber","collegeId","examId","startDate","Date","startTime","registrations","async","this","reloadData","methods","startDateTime","setHours","getHours","getMinutes","self","$refs","form","validate","post","apiUrl","first_name","last_name","phone_number","college_id","parseInt","exam_id","start_time","then","commit","isSuccess","message","isVisible","clearFields","catch","error","console","log","response","id","delete","get","map","registration","username","user","exam","name","start","toLocaleString","actions","reset","setTimeout","resetValidation","isPhoneNumber","regex","RegExp","test","__exports__","render"],"sourceRoot":""}